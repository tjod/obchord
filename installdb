#! /bin/bash -v

VERSION="/usr/lib/postgresql/9.2/"
PORT=5432

PSQL="$VERSION/bin/psql -p $PORT"
CREATELANG="$VERSION/bin/createlang -p $PORT"

DB=$1
if [ -z ${DB} ] ; then
  echo "You must give the name of the database you wish to use"
  echo "useage: install db_name"
  exit
fi
# These schema names can be changed.
# There is some overlap of functions, e.g. ob.tpsa and oc.tpsa
#  so using the same schema is not recommended.  Using public
#  for either one (but probably not both) is fine.
OB_SCHEMA=ob
OC_SCHEMA=oc

$PSQL $DB <<EOSQL
Create Schema $OC_SCHEMA;
Comment On Schema $OC_SCHEMA Is 'function for general use with openbabel or rdkit';
Grant Usage On Schema $OC_SCHEMA to public;
EOSQL
$CREATELANG plpythonu $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < varbit.sql.in | $PSQL $DB
sed s/_SCHEMA_/$OB_SCHEMA/g   < openbabel-core.sql.in | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < bits.sql.in | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < query.sql.in | sed s/_SCHEMA_/$OB_SCHEMA/g | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < public166keys.sql.in | sed s/_SCHEMA_/$OB_SCHEMA/g | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < similarity.sql.in |  sed s/_SCHEMA_/$OB_SCHEMA/g | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < amw.sql.in |  sed s/_SCHEMA_/$OB_SCHEMA/g | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < tpsa.sql.in |  sed s/_SCHEMA_/$OB_SCHEMA/g | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < glogp.sql.in |  sed s/_SCHEMA_/$OB_SCHEMA/g | $PSQL $DB
sed s/_OCSCHEMA_/$OC_SCHEMA/g < fragments.sql.in | $PSQL $DB
